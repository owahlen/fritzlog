apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'idea'

def jdkVersion = '1.7'

sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion

mainClassName = 'com.infinit.fritzlog.Main'

// The idea closure configure the idea plugin.
// The command "gradle idea" will setup a reasonable idea structure
idea {
	project {
		jdkName = jdkVersion
		languageLevel = jdkVersion
	}
	module {
		inheritOutputDirs = false
		outputDir = file('build/classes/main')
		testOutputDir = file('build/classes/test')

		iml {
			withXml { xml ->
				Node moduleNode = xml.asNode()
				moduleNode.component[0].children().last().plus {
					orderEntry(type: 'module-library', scope:"RUNTIME") {
						library {
							CLASSES {
								root(url: 'file://\$MODULE_DIR\$/src/main/resources')
							}
							JAVADOCK()
							SOURCES()
						}
					}
					orderEntry(type: 'module-library', scope:"TEST") {
						library {
							CLASSES {
								root(url: 'file://\$MODULE_DIR\$/build/resources/test')
							}
							JAVADOCK()
							SOURCES()
						}
					}
				}
			}
		}
	}
}

repositories {
	mavenCentral()
	mavenRepo name: 'Codehaus', url: 'http://repository.codehaus.org'
}

dependencies {

	compile('org.codehaus.groovy:groovy-all:2.1.3')
	compile('org.codehaus.groovy.modules.http-builder:http-builder:0.6') {
		exclude(group: 'org.codehaus.groovy', module: 'groovy')
	}
	compile('log4j:log4j:1.2.17') {
		transitive = false
	}
	compile('joda-time:joda-time:2.2')

	testCompile 'junit:junit:4.11'
	testCompile 'net.sourceforge.htmlunit:htmlunit:2.12'
}


